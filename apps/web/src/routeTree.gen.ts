/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as UnauthenticatedRouteRouteImport } from './routes/_unauthenticated/route'
import { Route as AuthenticatedRouteRouteImport } from './routes/_authenticated/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as UnauthenticatedSignUpRouteRouteImport } from './routes/_unauthenticated/sign-up/route'
import { Route as UnauthenticatedLoginRouteRouteImport } from './routes/_unauthenticated/login/route'

const UnauthenticatedRouteRoute = UnauthenticatedRouteRouteImport.update({
  id: '/_unauthenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const UnauthenticatedSignUpRouteRoute =
  UnauthenticatedSignUpRouteRouteImport.update({
    id: '/sign-up',
    path: '/sign-up',
    getParentRoute: () => UnauthenticatedRouteRoute,
  } as any)
const UnauthenticatedLoginRouteRoute =
  UnauthenticatedLoginRouteRouteImport.update({
    id: '/login',
    path: '/login',
    getParentRoute: () => UnauthenticatedRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof UnauthenticatedLoginRouteRoute
  '/sign-up': typeof UnauthenticatedSignUpRouteRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof UnauthenticatedLoginRouteRoute
  '/sign-up': typeof UnauthenticatedSignUpRouteRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteRoute
  '/_unauthenticated': typeof UnauthenticatedRouteRouteWithChildren
  '/_unauthenticated/login': typeof UnauthenticatedLoginRouteRoute
  '/_unauthenticated/sign-up': typeof UnauthenticatedSignUpRouteRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/login' | '/sign-up'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/login' | '/sign-up'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/_unauthenticated'
    | '/_unauthenticated/login'
    | '/_unauthenticated/sign-up'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRoute
  UnauthenticatedRouteRoute: typeof UnauthenticatedRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_unauthenticated': {
      id: '/_unauthenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof UnauthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_unauthenticated/sign-up': {
      id: '/_unauthenticated/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof UnauthenticatedSignUpRouteRouteImport
      parentRoute: typeof UnauthenticatedRouteRoute
    }
    '/_unauthenticated/login': {
      id: '/_unauthenticated/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof UnauthenticatedLoginRouteRouteImport
      parentRoute: typeof UnauthenticatedRouteRoute
    }
  }
}

interface UnauthenticatedRouteRouteChildren {
  UnauthenticatedLoginRouteRoute: typeof UnauthenticatedLoginRouteRoute
  UnauthenticatedSignUpRouteRoute: typeof UnauthenticatedSignUpRouteRoute
}

const UnauthenticatedRouteRouteChildren: UnauthenticatedRouteRouteChildren = {
  UnauthenticatedLoginRouteRoute: UnauthenticatedLoginRouteRoute,
  UnauthenticatedSignUpRouteRoute: UnauthenticatedSignUpRouteRoute,
}

const UnauthenticatedRouteRouteWithChildren =
  UnauthenticatedRouteRoute._addFileChildren(UnauthenticatedRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRouteRoute: AuthenticatedRouteRoute,
  UnauthenticatedRouteRoute: UnauthenticatedRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
